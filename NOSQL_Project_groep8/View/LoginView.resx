<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>